1	吴老师	各位同学，之前我们已经基本掌握了Scratch 3.0的各类指令，
3	吴老师	现在，让我们来看个演示程序的视频。
5	吴老师	请你一边看，一边想：
7	吴老师	这个演示程序里，用到了哪些我们学过的Scratch命令？
9	操作	（播放视频）
11	学生一x	程序里使用了“当绿旗被点击”，
13	学生一	用“移到XY”设置了角色的初始坐标，
15	学生一x	还调整了造型的大小。
17	学生二	使用了侦测里的“询问并等待”，
19	学生二	在回答后，跟回答相对应的角色调整了坐标，
21	学生二	实现了向下移动的操作，并再次调整了大小。
23	学生二x	在移动前，还用了“下一个造型”，
25	学生二	并用“说（数据）n秒”来实现报数。
27	吴老师	你们说得真好！观察得十分仔细！
29	吴老师	在回答问题时，我们输入了数字，
31	吴老师	然后对应的角色就开始报数了。
33	吴老师	这个是怎么实现的呢？
35	学生一	老师，我猜应该是用了广播。
37	学生一	但是广播后，所有添加了处理程序的角色都能收到的，
39	学生一	我不知道应该如何指定真正应该接收指令的角色。
41	吴老师	同学一猜得不错，
43	吴老师	我们可以通过发送统一的广播消息，
45	吴老师	让所有的角色都接收到广播。
47	吴老师	“询问并等待”指令，
49	吴老师	可以把我们输入的数据，
51	吴老师	保存在变量“回答”里。
53	吴老师	这个变量，是“适用于所有角色”的，
55	吴老师	所有角色都可以访问到。
57	吴老师	每个角色，我们都需要赋予他们唯一的编号，
59	吴老师	这样，在广播接收处理代码里，
61	吴老师	通过判断自己的编号和回答是否一致，
63	吴老师	来实现角色的区分。
65	吴老师	这个变量“编号”，
67	吴老师	在创建时，需要设置为“仅适用于当前角色”。
69	操作	(演示创建变量“编号”)
71	吴老师	接下来，让我们对照着任务单，
73	吴老师	试着完成这个游戏。
75	操作	（推送任务一）
77	操作	（学生进行操作）
79	学生二	咦，好奇怪啊！
81	学生二	我这五个角色，
83	学生二	在点击“绿旗”后，
85	学生二	怎么全跑到一块儿去了？
87	学生一	你后面的四个角色，
89	学生一	都是复制了第一个角色的脚本吧？
91	学生一	复制后有没有修改角色的坐标？
93	学生一	为了简便，在“当接收到‘报数’”里，
95	学生一	我使用了“将Y坐标增加n”的方式来实现出列/入列操作的，
97	学生一	这样，后面四个角色的脚本，复制后可以直接使用。
99	学生二	你的这个办法真的太好了！我马上改。
101	学生二	唉，还不对，他们怎么要么全报，要么全不报啊！
103	学生一	你没给变量“编号”设置初始值吧？
105	学生二	我设置了啊，每个的编号都不同。
107	学生一	我看出来了，你的变量“编号”，不是“仅适用于当前角色”，这个得删了重建。
109	学生二	好的，谢谢！
111	操作	(学生二修改)
113	学生二	成功了！
115	吴老师	刚才老师已经演示过，
117	吴老师	在新建变量的时候，
119	吴老师	在变量名的下方，有两个选项：
121	吴老师	“适用于所有角色”和“仅适用于当前角色”。
123	吴老师	因为每个角色都有自己独特的编号，
125	吴老师	所以这个编号，就应该设置成“仅适用于当前角色”。
127	吴老师	如果设置成“适用于所有角色”，
129	吴老师	则所有人在使用这个变量“编号”时，
131	吴老师	就会访问到同一个数值，于是无法区分，
133	吴老师	最终一起报同样的数或一起不报数。
135	吴老师	另外，我们的变量，
137	吴老师	是在点击绿旗的时候进行初始化的，
139	吴老师	如果你在点击绿旗前，就先执行了广播指令的发送，
141	吴老师	就会因为没有初始化变量，而出现全部显示0的现象。
143	吴老师	第一个任务大家完成得都很棒。
145	吴老师	在做第一个任务的时候，
147	吴老师	我们发现，五个角色，绝大部分的代码都是重复的。
149	吴老师	我们知道，
151	吴老师	在单个角色里，重复的代码，我们可以用重复执行的操作，
153	吴老师	但现在是角色级别的重复，
155	吴老师	这种情况，我们能否找到一种类似的省力的方法来实现呢？
157	学生一x	我们以前学过克隆操作，不知道可不可以用在这个程序里。
159	学生二x	我觉得可以。
161	学生二x	我打算把第一个角色当做本体，
163	学生二x	让它执行4次克隆，就应该可以得到五个角色。
165	吴老师	你们两的讨论对大家很有启发。
167	吴老师	让我们试试完成第二个任务吧。
169	操作	（发布任务二）
171	操作	（学生进行操作）
173	学生二	当我输入数字2时，有一个角色显示了另一个角色的造型，
175	学生二	角色造型错乱了。
177	学生一	角色一开始要设置造型为“（编号*2-1）”，
179	学生一	报数时，要改成“编号*2”，
181	学生一	报完数，再改成“编号*2-1”。
183	学生一	好奇怪啊！
185	学生一	当我输入1敲回车后，1号报数了。
187	学生一	不等1号入列，我继续输入3并敲回车，3号出列，
189	学生一	然后，1号就不会入列了。
191	学生二	我也遇到这个问题了，我把“广播”改成了“广播并等待”。
193	吴老师	克隆操作，会在执行时，
195	吴老师	将本体当前的参数指标（坐标、大小和仅适用于当前角色的变量等）复制一份给克隆体。
197	吴老师	并且，本体和克隆体会共享本体的所有控制脚本，
199	吴老师	“当作为克隆体启动时”除外。
201	吴老师	所以，克隆操作与角色造型坐标、大小和变量的变化，有很大的关系。
203	吴老师	如果执行的顺序发生变化，会得到不同的结果。
205	吴老师	今天这个小程序，大家做得都很用心，你们有什么收获么？
207	学生一x	我今天明白了“运动”中的“移到XY”和“将X坐标增加n”的适用场景不同。
209	吴老师	是的，“移到XY”实现了对绝对坐标的操控，
211	吴老师	而“将X/Y坐标增加n”则是进行了相对坐标的操控。
213	学生二x	我学会了变量的两种适用范围：“适用于所有角色”和“仅适用于当前角色”。
215	吴老师	当我们需要区分角色或仅在某一个角色内部适用一个变量时，
217	吴老师	就应该使用“仅适用于当前角色”这个类型。
219	吴老师	通过本课的练习，老师很高兴地看到大家都有了新的收获。
221	吴老师	最后，请“上传文件到服务器”。
223	吴老师	我们下节课，再见！
225	操作	（学生“上传文件到服务器”）
227	操作	（吴老师查看作业情况，本课结束）
